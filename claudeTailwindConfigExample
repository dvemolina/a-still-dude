import { fontFamily } from 'tailwindcss/defaultTheme';
import plugin from 'tailwindcss/plugin';

/** @type {import('tailwindcss').Config} */
export default {
  // Include all file types that might use Tailwind classes
  content: [
    './src/**/*.{html,js,svelte,ts,md,svx}',
    // Add any additional paths or file types
  ],
  
  // Enable dark mode via class
  darkMode: ['class'],

  // Theme configuration
  theme: {
    // Extend default theme instead of overwriting
    extend: {
      // Custom font families
      fontFamily: {
        // Primary font families
        headings: ['Vesper Libre', ...fontFamily.serif],
        subheadings: ['Nunito Sans Variable', ...fontFamily.sans],
        body: ['Noto Sans', ...fontFamily.sans],
        
        // Optional: Additional font stacks for flexibility
        display: ['Inter', ...fontFamily.sans],
        mono: ['Fira Code', ...fontFamily.mono],
      },

      // Comprehensive color palette with semantic meanings
      colors: {
        // Base theme colors with extended palette
        primary: {
          50: '#f0f9ff',
          100: '#e0f2fe',
          200: '#bae6fd',
          300: '#7dd3fc',
          400: '#38bdf8',
          500: '#0ea5e9', // Base primary color
          600: '#0284c7',
          700: '#0369a1',
          800: '#075985',
          900: '#0c4a6e',
        },
        secondary: {
          50: '#f5f3ff',
          100: '#ede9fe',
          200: '#ddd6fe',
          300: '#c4b5fd',
          400: '#a78bfa',
          500: '#8b5cf6', // Base secondary color
          600: '#7c3aed',
          700: '#6d28d9',
          800: '#5b21b6',
          900: '#4c1d95',
        },
        // Neutral/Gray palette with more granularity
        neutral: {
          50: '#fafafa',
          100: '#f5f5f5',
          200: '#e5e5e5',
          300: '#d4d4d4',
          400: '#a3a3a3',
          500: '#737373',
          600: '#525252',
          700: '#404040',
          800: '#262626',
          900: '#171717',
        },
        
        // Semantic color tokens
        background: {
          light: '#ffffff',
          dark: '#121212',
        },
        text: {
          light: '#000000',
          dark: '#ffffff',
        }
      },

      // Extended typography and responsive scales
      fontSize: {
        // Responsive and accessible font sizes
        'xs': ['0.75rem', { lineHeight: '1rem' }],
        'sm': ['0.875rem', { lineHeight: '1.25rem' }],
        'base': ['1rem', { lineHeight: '1.5rem' }],
        'lg': ['1.125rem', { lineHeight: '1.75rem' }],
        'xl': ['1.25rem', { lineHeight: '1.75rem' }],
        '2xl': ['1.5rem', { lineHeight: '2rem' }],
        '3xl': ['1.875rem', { lineHeight: '2.25rem' }],
        '4xl': ['2.25rem', { lineHeight: '2.5rem' }],
        '5xl': ['3rem', { lineHeight: '1', fontWeight: '700' }],
        '6xl': ['3.75rem', { lineHeight: '1', fontWeight: '700' }],
        '7xl': ['4.5rem', { lineHeight: '1', fontWeight: '700' }],
      },

      // Custom shadow system for depth and elevation
      boxShadow: {
        'subtle': '0 1px 3px 0 rgba(0, 0, 0, 0.05)',
        'DEFAULT': '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',
        'md': '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
        'lg': '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',
        'xl': '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
      },

      // Typography configuration
      typography: (theme) => ({
        // Default prose styles
        DEFAULT: {
          css: {
            // Headings styling
            'h1, h2, h3': {
              fontFamily: theme('fontFamily.headings'),
              fontWeight: '600',
              color: 'var(--color-text-heading)',
            },
            // Smaller headings
            'h4, h5, h6': {
              fontFamily: theme('fontFamily.subheadings'),
              fontWeight: '500',
              color: 'var(--color-text-subheading)',
            },
            // Body text
            'p, ul, ol, blockquote': {
              fontFamily: theme('fontFamily.body'),
              color: 'var(--color-text-body)',
            },
            // Link styling
            'a': {
              color: 'var(--color-primary-500)',
              textDecoration: 'none',
              fontWeight: '500',
              transition: 'color 0.2s ease',
              '&:hover': {
                color: 'var(--color-primary-600)',
                textDecoration: 'underline',
              }
            },
            // Code styling
            'code': {
              fontFamily: theme('fontFamily.mono'),
              backgroundColor: 'var(--color-neutral-100)',
              padding: '0.2rem 0.4rem',
              borderRadius: '0.25rem',
              fontWeight: '400',
            },
            // Blockquote styling
            'blockquote': {
              borderLeftColor: 'var(--color-primary-500)',
              fontStyle: 'italic',
              quotes: 'none',
            }
          }
        },
        // Dark mode typography
        invert: {
          css: {
            color: 'var(--color-text-body)',
            'a': {
              color: 'var(--color-primary-300)',
              '&:hover': {
                color: 'var(--color-primary-200)',
              }
            }
          }
        }
      }),

      // Custom theme generation for multiple themes
      themeGenerator: {
        // Predefined theme variations
        themes: {
          default: {
            primary: 'primary',
            secondary: 'secondary',
            neutral: 'neutral',
          },
          ocean: {
            primary: {
              500: '#3b82f6',
              600: '#2563eb',
            },
            secondary: {
              500: '#10b981',
              600: '#059669',
            },
          },
          forest: {
            primary: {
              500: '#22c55e',
              600: '#16a34a',
            },
            secondary: {
              500: '#f59e0b',
              600: '#d97706',
            },
          }
        }
      }
    }
  },

  // Plugins
  plugins: [
    // Tailwind Typography
    require('@tailwindcss/typography'),
    
    // Custom theme and CSS variable plugin
    plugin(({ addBase, theme }) => {
      // Base CSS variables for light mode
      const lightModeVars = {
        '--color-text-heading': theme('colors.text.light'),
        '--color-text-subheading': theme('colors.neutral.800'),
        '--color-text-body': theme('colors.neutral.700'),
        '--color-background': theme('colors.background.light'),
      };

      // Dark mode CSS variables
      const darkModeVars = {
        '--color-text-heading': theme('colors.text.dark'),
        '--color-text-subheading': theme('colors.neutral.200'),
        '--color-text-body': theme('colors.neutral.300'),
        '--color-background': theme('colors.background.dark'),
      };

      // Add base styles with CSS variables
      addBase({
        ':root': lightModeVars,
        '.dark': darkModeVars,
      });

      // Optional: Add utility classes for theme management
      Object.entries(theme('themeGenerator.themes')).forEach(([themeName, themeConfig]) => {
        // Generate theme-specific utility classes if needed
      });
    }),
  ]
}